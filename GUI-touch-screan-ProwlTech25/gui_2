import customtkinter as ctk
from PIL import Image

# Setter mørkt tema for hele GUI-et
ctk.set_appearance_mode("dark")

# Definerer farger brukt i designet for konsistens og enkel endring
text_color = "#BDBDBD"
background_color = "#140520"
top_panel_color = "#2F0B63"
button_color = "#4C1A92"
frame_color = "#583092"
frame_border_color = "#3A0C7D"
button_border_color = "black"
error_section = "#311C42"
border_size = 8

# Hovedklasse for GUI-et
class ProwlTechApp(ctk.CTk):
    def __init__(self):
        super().__init__()
        self.title("ProwlTech Kontrollpanel")           # Setter vindutittel
        self.geometry("800x450")                        # Setter størrelse 
        #self.resizable(False,False)                     # Hindrer at vinduet kan skaleres
        self.attributes("-fullscreen", True)
        self.bind("<Escape>", self.exit_fullscreen)     # ESC lukker programmet

        # Konfigurerer rutenett(grid) for layout
        self.grid_rowconfigure(0, minsize=150)
        self.grid_rowconfigure(1, weight=1)
        self.grid_rowconfigure(2, weight=1)
        self.grid_rowconfigure(3, weight=1)

        self.grid_columnconfigure(0, weight=1)
        self.grid_columnconfigure(1, weight=1)
        self.grid_columnconfigure(2, weight=1)
        self.grid_columnconfigure(3, weight=1)

        # Kaller funksjoner som bygger seksjonene
        self.top_section()
        self.mid_section()
        self.bot_section()

    # Funksjon for å avslutte programmet (ESC)
    def exit_fullscreen(self, event=None):
        self.destroy()

    # Toppseksjon: logo, tittel og knapper
    def top_section(self):
        self.top_frame = ctk.CTkFrame(self, fg_color=top_panel_color, height=130)
        self.top_frame.grid(row=0, column=0, columnspan=4, sticky="nsew")
        self.top_frame.grid_propagate(False)

        # Legger til USN-logo
        logo_image = Image.open("USN_logo2.png")                                            
        self.logo_icon = ctk.CTkImage(light_image=logo_image, size=(60, 40))               
        self.logo_label = ctk.CTkLabel(self.top_frame, image=self.logo_icon, text="")      
        self.logo_label.place(x=720, y=25)                                               

        # Ikon: bluetooth
        bluetooth_image = Image.open("bluetooth.png")
        self.bluetooth_icon = ctk.CTkImage(light_image=bluetooth_image, size=(20, 20))

        # Ikon: av/på
        power_image = Image.open("power.png")
        self.power_icon = ctk.CTkImage(light_image=power_image, size=(25, 25))

        # Titteltekst i midten av toppseksjonen
        self.title_label = ctk.CTkLabel(
            self.top_frame, 
            text="ProwlTech\nKontrollpanel",
            font=("Helvetica", 40),
            text_color="#E4E4E4",
            justify="center",
            anchor="center"
        )
        self.title_label.place(relx=0.5, rely=0.5, anchor=ctk.CENTER)


        # Knapp for å koble til kontroller (åpner nytt vindu)
        self.connect_button = ctk.CTkButton(
            self.top_frame,
            width=50,
            height=40,
            text="Koble til kontroller",
            image=self.bluetooth_icon,
            compound="right",                          
            font=("Century Gothic", 16),
            fg_color=button_color,
            text_color="white",
            corner_radius=10,
            command=self.open_connection_window      
        )
        self.connect_button.grid(row=0, column=0, padx=40, pady=45)

        # Av/på-knapp (ingen funksjon definert enda)
        self.power_button = ctk.CTkButton(
            self.top_frame,
            width=85,
            height=40,
            text="Info",
            font=("Century Gothic", 16),
            text_color="white",
            #image=self.power_icon,
            #compound="right",
            fg_color=button_color,
            corner_radius=10
        )
        self.power_button.grid(row=0, column=3, padx=(320, 10), pady=45)


    # Pop-up vindu som vises når "Koble til kontroller" trykkes på
    def open_connection_window(self):

        # Ikon: kryss 
        cross_image = Image.open("cross.png")
        self.cross_icon = ctk.CTkImage(light_image=cross_image, size=(15, 15))

        # Ikon: oppdatere 
        update_image = Image.open("rotate.png")
        self.update_icon = ctk.CTkImage(light_image=update_image, size=(15, 15))

        # Ytre ramme av popup-vindu
        self.popup_border =ctk.CTkFrame(self, fg_color=frame_border_color, corner_radius=0)
        self.popup_border.place(relx=0.5, rely=0.5, anchor="center", relwidth=0.9, relheight=0.9)
        self.popup_border.grid_propagate(False)

        # Indre ramme av popup-vindu
        self.popup_panel = ctk.CTkFrame(self.popup_border, fg_color=background_color, corner_radius=20)
        self.popup_panel.place(relx=0.5, rely=0.5, anchor="center", relwidth=0.98, relheight=0.98)

        # Grid-oppsett i popup-vindu
        self.popup_panel.grid_rowconfigure(0, minsize=80)
        self.popup_panel.grid_rowconfigure(1, weight=1)
        self.popup_panel.grid_columnconfigure(0, weight=1)
        self.popup_panel.grid_columnconfigure(1, weight=1)
        self.popup_panel.grid_columnconfigure(2, weight=1)

        # Øvre og nedre seksjon i popup-vindu
        self.top = ctk.CTkFrame(self.popup_panel, fg_color=top_panel_color)
        self.top.grid(row=0, column=0, columnspan=3, sticky="nsew")

        self.bottom = ctk.CTkFrame(self.popup_panel, fg_color=background_color)
        self.bottom.grid(row=1, column=0, columnspan=3, sticky="nsew")
        
        # Knapp for å søke etter tilgjengelige kontroller
        search_button = ctk.CTkButton(
            self.top,
            text="Oppdater",
            width=150,
            height=50,
            image=self.update_icon,
            compound="right",  
            font=("Century Gothic", 16),
            fg_color=button_color,
            text_color="white",
            corner_radius=70,
            border_width=1,
            border_color=button_border_color,
        )
        search_button.grid(row=0, column=0, padx=(10, 50), pady=30)

        # Titteltekst i popup-vindu
        self.label = ctk.CTkLabel(
            self.top, 
            text="Enheter", 
            font=("Century Gothic", 24),
            justify="center",
            anchor="center"
            )
        self.label.grid(row=0, column=1, padx=95, pady=30)

   
        # Lukk-knapp for popup-vindu
        close_button = ctk.CTkButton(
            self.top,
            text="Lukk",
            width=150,
            height=50,
            image=self.cross_icon,
            compound="right",  
            font=("Century Gothic", 16),
            fg_color=button_color,
            text_color="white",
            corner_radius=70,
            border_width=1,
            border_color=button_border_color,
            command=self.close_connection_popup
        )
        close_button.grid(row=0, column=2, padx=(50, 25), pady=30)

    # Lukker popup-vindu når lukk-knappen trykkes
    def close_connection_popup(self):
        self.popup_border.destroy()
        self.popup_panel.destroy()



    # Midtseksjon: viser batteri, temperatur, tilkobling og sensor
    def mid_section(self):
        self.mid_frame = ctk.CTkFrame(self, fg_color=background_color)
        self.mid_frame.grid(row=1, column=0, rowspan=2, columnspan=4, sticky="nsew")
        self.mid_frame.grid_propagate(False)

        # Ikon: bolt
        bolt_image = Image.open("bolt.png")
        self.bolt_icon = ctk.CTkImage(light_image=bolt_image, size=(15, 15))

        # Ikon: termometer
        temp_image = Image.open("temperature.png")
        self.temp_icon = ctk.CTkImage(light_image=temp_image, size=(15, 15))

        # Ikon: tilkobling
        signal_image = Image.open("signal-2.png")
        self.signal_icon = ctk.CTkImage(light_image=signal_image, size=(15, 15))

        # Ikon: sensor
        sensor_image = Image.open("signal.png")
        self.sensor_icon = ctk.CTkImage(light_image=sensor_image, size=(17, 17))


        # Batteristatus:
        self.battery_container = ctk.CTkFrame(self.mid_frame, fg_color=background_color)
        self.battery_container.grid(row=1, column=0, rowspan=2, padx=10, pady=20)

        # Titteltekst
        self.battery_label = ctk.CTkLabel(
            self.battery_container, 
            text="BATTERISTATUS  ",
            font=("Century Gothic", 13),
            image=self.bolt_icon,
            compound="right",
            text_color=text_color,
            justify="left"
        )
        self.battery_label.pack(side="top", anchor="w", padx=15, pady=0)

        # Ramme
        self.battery_frame = ctk.CTkFrame(self.battery_container, height=150, width=160, fg_color=frame_color, corner_radius=25, border_color=frame_border_color, border_width=border_size)
        self.battery_frame.pack(side="top", expand=True, padx=10, pady=0)

        
        # Temperaturmålinger:
        self.temp_container = ctk.CTkFrame(self.mid_frame, fg_color=background_color)
        self.temp_container.grid(row=1, column=1, rowspan=2, padx=10, pady=20)

        # Titteltekst
        self.temp_label = ctk.CTkLabel(
            self.temp_container, 
            text="TEMPERATUR  ",
            font=("Century Gothic", 13),
            image=self.temp_icon,
            compound="right",
            text_color=text_color,
            justify="left"
        )
        self.temp_label.pack(side="top", anchor="w", padx=15, pady=0)

        # Ramme
        self.temp_frame = ctk.CTkFrame(self.temp_container, height=150, width=160, fg_color=frame_color, corner_radius=25, border_color=frame_border_color, border_width=border_size)
        self.temp_frame.pack(side="top", expand=True, padx=10, pady=0)


        # Tilkoblingsstatus:
        self.connection_containter = ctk.CTkFrame(self.mid_frame, fg_color=background_color)
        self.connection_containter.grid(row=1, column=2, columnspan=2, sticky="sew")

        # Titteltekst
        self.connection_label = ctk.CTkLabel(
            self.connection_containter, 
            text="TILKOBLING  ",
            font=("Century Gothic", 13),
            image=self.signal_icon,
            compound="right",
            text_color=text_color,
            justify="left"
        )
        self.connection_label.pack(side="top", anchor="w", padx=35, pady=0)

        # Ramme
        self.temp_frame = ctk.CTkFrame(self.connection_containter, height=75, width=300, fg_color=frame_color, corner_radius=30, border_color=frame_border_color, border_width=border_size)
        self.temp_frame.pack(side="top", expand=True, padx=30, pady=(0, 10))


        # Sensormåling:
        self.sensor_container = ctk.CTkFrame(self.mid_frame, fg_color=background_color)
        self.sensor_container.grid(row=2, column=2, columnspan=2, sticky="new")

        #tittel
        self.sensor_label = ctk.CTkLabel(
            self.sensor_container, 
            text="SENSORMÅLINGER  ",
            font=("Century Gothic", 13),
            image=self.sensor_icon,
            compound="right",
            text_color=text_color,
            justify="left"
        )
        self.sensor_label.pack(side="top", anchor="w", padx=35, pady=0)

        #ramme
        self.sensor_frame = ctk.CTkFrame(self.sensor_container, height=75, width=300, fg_color=frame_color, corner_radius=30, border_color=frame_border_color, border_width=border_size)
        self.sensor_frame.pack(side="top", expand=True, padx=30, pady=(0, 0))

    # Bunnseksjon: viser feilmeldinger
    def bot_section(self):  
        self.bot_frame = ctk.CTkFrame(self, fg_color=background_color, height=120)
        self.bot_frame.grid(row=3, column=0, columnspan=4, sticky="nsew")
        self.bot_frame.grid_propagate(False)

        # Ikon: advarseltegn
        warning_image = Image.open("warning.png")
        self.warning_icon = ctk.CTkImage(light_image=warning_image, size=(17, 17))

        # Feilmeldinger:
        self.error_container = ctk.CTkFrame(self.bot_frame, fg_color=background_color)
        self.error_container.grid(row=3, column=0, columnspan=4, sticky="nsew")

        # Titteltekst
        self.error_label = ctk.CTkLabel(
            self.error_container, 
            text="FEILMELDINGER  ",
            image=self.warning_icon,
            compound="right", 
            font=("Century Gothic", 14),
            text_color=text_color,
            justify="left"
        )
        self.error_label.pack(side="top", anchor="w", padx=15, pady=0)
       
        # Ramme
        self.error_frame = ctk.CTkFrame(self.error_container, height=80, width=750, fg_color=error_section, corner_radius=20)
        self.error_frame.pack(side="top", expand=True, padx=10, pady=5)

       

# Starter GUI-applikasjon
app = ProwlTechApp()
app.mainloop()